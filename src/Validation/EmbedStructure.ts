// Generated by ts-to-zod
import { z } from 'zod';

export const messageEmbedVideoSchema = z.object({
	url: z.string().optional(),
	proxyURL: z.string().optional(),
	height: z.number().optional(),
	width: z.number().optional(),
});

export const messageEmbedImageSchema = z.object({
	url: z.string(),
	proxyURL: z.string().optional(),
	height: z.number().optional(),
	width: z.number().optional(),
});

export const messageEmbedFooterSchema = z.object({
	text: z.string(),
	iconURL: z.string().optional(),
	proxyIconURL: z.string().optional(),
});

export const embedFieldDataSchema = z.object({
	name: z.string(),
	value: z.string(),
	inline: z.boolean().optional(),
});

export const messageEmbedAuthorSchema = z.object({
	name: z.string(),
	url: z.string().optional(),
	iconURL: z.string().optional(),
	proxyIconURL: z.string().optional(),
});

export const messageEmbedThumbnailSchema = z.object({
	url: z.string(),
	proxyURL: z.string().optional(),
	height: z.number().optional(),
	width: z.number().optional(),
});

export const hexColorStringSchema = z.string().regex(/^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/);

export const colorResolvableSchema = z.union([
	z.literal('DEFAULT'),
	z.literal('WHITE'),
	z.literal('AQUA'),
	z.literal('GREEN'),
	z.literal('BLUE'),
	z.literal('YELLOW'),
	z.literal('PURPLE'),
	z.literal('LUMINOUS_VIVID_PINK'),
	z.literal('FUCHSIA'),
	z.literal('GOLD'),
	z.literal('ORANGE'),
	z.literal('RED'),
	z.literal('GREY'),
	z.literal('DARKER_GREY'),
	z.literal('NAVY'),
	z.literal('DARK_AQUA'),
	z.literal('DARK_GREEN'),
	z.literal('DARK_BLUE'),
	z.literal('DARK_PURPLE'),
	z.literal('DARK_VIVID_PINK'),
	z.literal('DARK_GOLD'),
	z.literal('DARK_ORANGE'),
	z.literal('DARK_RED'),
	z.literal('DARK_GREY'),
	z.literal('LIGHT_GREY'),
	z.literal('DARK_NAVY'),
	z.literal('BLURPLE'),
	z.literal('GREYPLE'),
	z.literal('DARK_BUT_NOT_BLACK'),
	z.literal('NOT_QUITE_BLACK'),
	z.literal('RANDOM'),
	z.any(),
	z.number(),
	hexColorStringSchema,
]);

export const messageEmbedOptionsSchema = z.object({
	title: z.string().optional(),
	description: z.string().optional(),
	url: z.string().optional(),
	timestamp: z.union([z.date(), z.number()]).optional(),
	color: colorResolvableSchema.optional(),
	fields: z.array(embedFieldDataSchema).optional(),
	author: messageEmbedAuthorSchema.and(
		z.object({
			icon_url: z.string().optional(),
			proxy_icon_url: z.string().optional(),
		}),
	),
	thumbnail: messageEmbedThumbnailSchema.and(
		z.object({
			proxy_url: z.string().optional(),
		}),
	),
	image: messageEmbedImageSchema.and(
		z.object({
			proxy_url: z.string().optional(),
		}),
	),
	video: messageEmbedVideoSchema.and(
		z.object({
			proxy_url: z.string().optional(),
		}),
	),
	footer: messageEmbedFooterSchema.and(
		z.object({
			icon_url: z.string().optional(),
			proxy_icon_url: z.string().optional(),
		}),
	),
});
